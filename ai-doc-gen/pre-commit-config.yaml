# Pre-commit configuration for AI Documentation Generation
# Ensures code quality and consistency in development environment

repos:
  # Python code formatting and linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.0
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/]

  # YAML validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [--strict]

  # JSON validation
  - repo: https://github.com/pre-commit/mirrors-jsonlint
    rev: v1.6.3
    hooks:
      - id: jsonlint

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Git hooks
  - repo: local
    hooks:
      - id: trailing-whitespace
        name: trailing whitespace
        entry: trailing-whitespace-fixer
        language: system
        types: [text]

      - id: end-of-file-fixer
        name: end of file fixer
        entry: end-of-file-fixer
        language: system
        types: [text]

      - id: check-yaml
        name: check yaml
        entry: check-yaml
        language: system

      - id: check-added-large-files
        name: check added large files
        entry: check-added-large-files
        language: system
        args: ['--maxkb=1000']

  # Custom hooks for this project
  - repo: local
    hooks:
      - id: check-env-file
        name: check environment file
        entry: bash -c 'if [ ! -f .env ]; then echo "Warning: .env file not found. Run make setup-env to create one."; fi'
        language: system
        pass_filenames: false

      - id: check-python-version
        name: check python version
        entry: bash -c 'python --version | grep -q "3.11" || (echo "Warning: Python 3.11 recommended. Current version:" && python --version)'
        language: system
        pass_filenames: false 